#!/bin/bash

# 读取配置文件
SCRIPT=$(readlink -f $0)
PROFILE=$(dirname $SCRIPT)"/lpic.rc"
AccessKey=$(awk -F "=" '/^AccessKey/ {print $2}' $PROFILE)
SecretKey=$(awk -F "=" '/^SecretKey/ {print $2}' $PROFILE)
User=$(awk -F "=" '/^User/ {print $2}' $PROFILE)
Passwd=$(awk -F "=" '/^Passwd/ {print $2}' $PROFILE)
Bucket=$(awk -F "=" '/^Bucket/ {print $2}' $PROFILE)
URL_Prefix=$(awk -F "=" '/^URL_Prefix/ {print $2}' $PROFILE)
AUTO_COMPRESS=$(awk -F "=" '/^AUTO_COMPRESS/ {print $2}' $PROFILE)
QUALITY=$(awk -F "=" '/^QUALITY/ {print $2}' $PROFILE)
TMP_DIR=$(awk -F "=" '/^TMP_DIR/ {print $2}' $PROFILE)
AUTO_COPY=$(awk -F "=" '/^AUTO_COPY/ {print $2}' $PROFILE)

# 图像预处理
tmp_file=""
preprocess() {
    if [[ ${AUTO_COMPRESS/n/N} == 'N' ]]; then
        return $@
    fi
    local file=$1
    local suffix=$(echo ${file##*.} | tr 'A-Z' 'a-z')
    local datetime=$(date +%Y%m%d_%H%M%S)
    
    # 对图像进行压缩、重命名
    mkdir -p $TMP_DIR
    case $suffix in
    jpg|png|bmp)
        tmp_file=${TMP_DIR%/}/$datetime".jpg"
        convert -strip -quality $QUALITY $file $tmp_file
    ;;
    *)
        tmp_file=${TMP_DIR%/}/$datetime"."$suffix
        convert -strip $file $tmp_file
    esac
}

# 上传文件
upload() {
    # 如果没有登录，则先登录
    if [[ -z $(qrsctl info | grep Uid) ]]; then
        if [[ -n $AccessKey && -n $SecretKey ]]; then
            qrsctl login $AccessKey $SecretKey
        elif [[ -n $User && -n $Passwd ]]; then
            qrsctl login $User $Passwd
        else
            echo "登录失败：请填写AccessKey/SecretKey或User/Passwd"
            exit 1
        fi
        # 如果登录失败则退出
        if [[ -z $(qrsctl info | grep Uid) ]]; then
            echo "登录失败：请检查AccessKey/SecretKey或User/Passwd是否正确"
            exit 1
        fi
    fi
    # 开始上传文件
    local file=$1
    if [[ -n $Bucket ]]; then
        qrsctl put $Bucket ${file##*/} $file
        if [[ $? -eq 0 ]]; then
            if [[ $URL_Prefix =~ "https?://" ]]; then
                local url=${URL_Prefix%/}/${file##*/}
            else
                local url=http://${URL_Prefix%/}/${file##*/}
            fi
            echo "已上传: "$url
            if [[ ${AUTO_COPY/y/Y} == 'Y' ]]; then
                if [[ -n $(command -v xsel) ]]; then
                    echo -n $url | xsel -i -b
                else
                    echo "请安装xsel以便复制内容到剪贴板"
                fi
            fi
        else
            echo "上传失败！"
            exit 1
        fi
    else
        echo "没有填写Bucket"
        exit 1
    fi
}

# ------------------------------------------
if [[ -z $1 ]]; then
    # 上传最新的文件
    file=$(ls -1t | head -1)
    if [[ -n $file ]]; then
        echo -n "上传文件: "$file" ?([y]/n) "
        read ans
        if [[ ${ans/Y/y} == 'y' || -z $ans ]]; then
            preprocess $file
            upload $tmp_file
        fi
    fi
elif [[ $1 == "del" ]]; then
    # 删除Bucket中最新的文件（根据文件名匹配）
    file=$(qrsctl listprefix $Bucket $(date +%Y%m%d) | sed -n '2,$p' | sort -r | head -1)
    if [[ -n $file ]]; then
        echo -n "删除文件: "$file" ?([y]/n) "
        read ans
        if [[ ${ans/Y/y} == 'y' || -z $ans ]]; then
            qrsctl del $Bucket $file
        fi
    else
        echo "Bucket中没有匹配到今天的文件"
        exit 1
    fi
elif [[ $1 == "web" ]]; then
    xdg-open https://portal.qiniu.com/bucket/"$Bucket"/resource &> /dev/null
elif [[ $1 == "-h" || $1 == "--help" || $1 == "help" ]]; then
    cat << EOF
用法: lpic [<command>] [<args>]

可用命令:
    help, -h, --help    显示帮助
    del                 删除Bucket中最新的文件
    web                 打开Bucket内容管理页面
    put                 上传文件

省略命令时，上传最新文件。
EOF
elif [[ $1 == "put" ]]; then
    # 上传指定的文件
    if [[ -f $2 ]]; then
        preprocess $2
        upload $tmp_file
    else
        echo "文件 "$2" 不存在！"
        exit 1
    fi
else
    echo "未知命令" $@
    exit 1
fi
